<Window x:Class="WpfGraphs.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfGraphs"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.DataContext>
        <local:ViewModelMain/>
    </Window.DataContext>
    <Window.Resources>
        <sys:Int32 x:Key="NodeSize">45</sys:Int32>
        <sys:Int32 x:Key="NodeTextSize">25</sys:Int32>
    </Window.Resources>

    <Grid Background="LightGray">
        <Canvas x:Name="canvasMain" Margin="50,0,0,0" Background="White" Grid.Row="0" Grid.Column="1">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseLeftButtonDown">
                    <i:CallMethodAction TargetObject="{Binding}" MethodName="CanvasClicked"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <i:Interaction.Behaviors>
                <local:MouseBehaviourCanvas MouseX="{Binding MouseX, Mode=OneWayToSource}"
                                               MouseY="{Binding MouseY, Mode=OneWayToSource}" />
            </i:Interaction.Behaviors >
            <ItemsControl ItemsSource="{Binding MainGraph.Edges}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas></Canvas>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type local:Edge}">
                        <Grid Margin="0,0,0,0">
                            <local:Arrow X1="{Binding XStart}" X2="{Binding XEnd}" Y1="{Binding YStart}" Y2="{Binding YEnd}" ArrowConnected="{Binding IsDirectional}" StrokeThickness="5">
                                <local:Arrow.Style>
                                    <Style TargetType="local:Arrow">
                                        <Setter Property="Fill" Value="LightBlue"/>
                                        <Setter Property="Stroke" Value="LightBlue"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Highlight}" Value="True">
                                                <Setter Property="Fill" Value="LightGreen" />
                                                <Setter Property="Stroke" Value="LightGreen" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </local:Arrow.Style>
                            </local:Arrow>
                            <!--<Ellipse Stroke="Black" Fill="LightBlue" Width="{Binding Source={StaticResource NodeSize}}" Height="{Binding Source={StaticResource NodeSize}}" Opacity="0.8"/>
                                    <Label FontSize="{Binding Source={StaticResource NodeTextSize}}" Content="{Binding Id}" HorizontalAlignment="Center"/>-->
                            <!--<Ellipse Width="10" Height="10" Fill="Red" Margin="{Binding DisplayMarginMiddle}"/>-->
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <ItemsControl ItemsSource="{Binding MainGraph.Edges}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas Margin="0,0,0,0"></Canvas>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type local:Edge}">
                        <TextBox Text="{Binding Weight, UpdateSourceTrigger=PropertyChanged}" Width="20" Height="20" Margin="{Binding DisplayMarginMiddle}"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <ItemsControl ItemsSource="{Binding MainGraph.Nodes}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas></Canvas>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type local:Node}">
                        <Button Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.SelectNodeOnCanvasCommand}" CommandParameter="{Binding Id}" Margin="{Binding DisplayMargin}">
                            <Button.Content>
                                <Grid>
                                    <Ellipse Stroke="Black" Fill="LightBlue" Width="{Binding Source={StaticResource NodeSize}}" Height="{Binding Source={StaticResource NodeSize}}" Opacity="0.8"/>
                                    <Label FontSize="{Binding Source={StaticResource NodeTextSize}}" Content="{Binding Id}" HorizontalAlignment="Center"/>
                                </Grid>
                            </Button.Content>
                            <Button.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="{Binding Source={StaticResource NodeSize}}"/>
                                </Style>
                            </Button.Resources>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Background" Value="White"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}" BorderBrush="White" BorderThickness="0">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="Blue"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Canvas>


        <Button x:Name="btnNode" Grid.Row="0" Grid.Column="0" Width="50" HorizontalAlignment="Left" Height="50" VerticalAlignment="Top" Command="{Binding SelectNodeCommand}">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="LightGray" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ToolSelected }">
                            <DataTrigger.Value>
                                <local:Tool>Node</local:Tool>
                            </DataTrigger.Value>
                            <Setter Property="Background" Value="Gray" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
            <Ellipse Width="40" Height="40" Fill="LightBlue" Stroke="Black"/>
        </Button>
        <Button x:Name="btnArrow" Grid.Row="1" Grid.Column="0" Width="50" HorizontalAlignment="Left" Height="50" VerticalAlignment="Top" Margin="0,50,0,0" Command="{Binding SelectArrowCommand}">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="LightGray" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ToolSelected }">
                            <DataTrigger.Value>
                                <local:Tool>Arrow</local:Tool>
                            </DataTrigger.Value>
                            <Setter Property="Background" Value="Gray" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>

            <Grid>
                <Rectangle Stroke="Black" Width="35" Height="5" Fill="LightBlue" HorizontalAlignment="Left" Margin="-5,3,0,3"/>
                <Polygon Fill="LightBlue" Stroke="Black" Margin="27,6,-51,-5">
                    <Polygon.Points>
                        <Point X="0" Y="-7"></Point>
                        <Point X="7" Y="0"></Point>
                        <Point X="0" Y="7"></Point>
                    </Polygon.Points>
                </Polygon>
            </Grid>
        </Button>
        <Button x:Name="btn2Arrow" Grid.Row="1" Grid.Column="0" Width="50" HorizontalAlignment="Left" Height="50" VerticalAlignment="Top" Margin="0,100,0,0" Command="{Binding SelectArrow2Command}">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="LightGray" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ToolSelected }">
                            <DataTrigger.Value>
                                <local:Tool>Arrow2</local:Tool>
                            </DataTrigger.Value>
                            <Setter Property="Background" Value="Gray" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="13*"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Rectangle Stroke="Black" Width="36" Height="5" Fill="LightBlue" HorizontalAlignment="Left" Margin="0,3,0,3" Grid.ColumnSpan="2"/>
                <Polygon Fill="LightBlue" Stroke="Black" Margin="32,6,-50,-5" Grid.ColumnSpan="2">
                    <Polygon.Points>
                        <Point X="0" Y="-7"></Point>
                        <Point X="7" Y="0"></Point>
                        <Point X="0" Y="7"></Point>
                    </Polygon.Points>
                </Polygon>
                <Polygon Fill="LightBlue" Stroke="Black" Margin="5,5,-5,-5" RenderTransformOrigin="0.5,0.5" Grid.ColumnSpan="2">
                    <Polygon.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="-0.469"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Polygon.RenderTransform>
                    <Polygon.Points>
                        <Point X="0" Y="-7"></Point>
                        <Point X="-7" Y="0"></Point>
                        <Point X="0" Y="7"></Point>
                    </Polygon.Points>
                </Polygon>
            </Grid>
        </Button>
        <Button x:Name="btnClear" Grid.Row="0" Grid.Column="0" Width="50" HorizontalAlignment="Left" Height="50" VerticalAlignment="Top" Margin="0,150,0,0" Command="{Binding ClearCanvasCommand}">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="LightGray" />
                </Style>
            </Button.Style>
            <Grid>
                <Line X1="3" Y1="3" X2="43" Y2="43" Stroke="Red" StrokeThickness="5"/>
                <Line X1="3" Y2="3" X2="43" Y1="43" Stroke="Red" StrokeThickness="5"/>
            </Grid>
        </Button>
        <Button x:Name="btnCalc" Grid.Row="0" Grid.Column="0" Width="50" HorizontalAlignment="Left" Height="50" VerticalAlignment="Top" Margin="0,200,0,0" Command="{Binding StartComputeCommand}">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="LightGray" />
                </Style>
            </Button.Style>
            <Grid>
                <TextBlock Text="Start" FontSize="18"/>
            </Grid>
        </Button>
        <Button x:Name="btnSave" Grid.Row="0" Grid.Column="0" Width="50" HorizontalAlignment="Left" Height="50" VerticalAlignment="Top" Margin="0,250,0,0" Command="{Binding SaveCommand}">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="LightGray" />
                </Style>
            </Button.Style>
            <Grid>
                <TextBlock Text="Save" FontSize="18"/>
            </Grid>
        </Button>
    </Grid>
</Window>
